/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AppCore.java
 *
 * Created on Feb 22, 2014, 11:49:05 PM
 */

package pesofare.frame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.UIManager;
import pesofare.constants.StringConstants;
import pesofare.core.AppCore;
import pesofare.listeners.buttons.ButtonListeners;
import pesofare.globals.GlobalVariables;
import pesofare.thread.ComListenerThread;
import pesofare.thread.TimerThread;

/**
 *
 * @author Abner
 */
public class AppFrame extends javax.swing.JFrame {

    private LockScreenFrame lockFrame = new LockScreenFrame(GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice());
    //private LockScreenFrame lockFrame = new LockScreenFrame();
    private int xLoc = 0;
    private int yLoc = 0;
    private Point point = new Point();
    
    /** Creates new form AppCore */
    public AppFrame() {
        initComponents();
        initSystemProperties();
        initSystemListeners();
    }

    private void initSystemProperties()
    {
         Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
         xLoc = (int) ((dimension.getWidth() - getWidth()) / 2);
         yLoc = (int) ((dimension.getHeight() - getHeight()) / 2);
         setLocation(xLoc, yLoc);
         
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            AppCore.getFileLogger().log(e.getMessage());
        }

        logoutB.setActionCommand(StringConstants.TIMEOUT_CMD);
        logoutB.setBorderPainted(false);
        logoutB.setFocusPainted(false);
        logoutB.setContentAreaFilled(false);

        ImageIcon img = new ImageIcon(System.getProperty("user.dir") + GlobalVariables.config.getString("logout_icon"));
        ImageIcon imgPressed = new ImageIcon(System.getProperty("user.dir") + GlobalVariables.config.getString("logout_icon_pressed"));
        ImageIcon imgRollover = new ImageIcon(System.getProperty("user.dir") +  GlobalVariables.config.getString("logout_icon_hover"));
        logoutB.setIcon(img);
        logoutB.setPressedIcon(imgPressed);
        logoutB.setRolloverIcon(imgRollover);

        timeL.setText(GlobalVariables.config.getString("default_display"));
        timeL.setFont(new Font(GlobalVariables.config.getString("font"),1,Integer.valueOf(GlobalVariables.config.getString("size"))));
        String rgb[] = GlobalVariables.config.getString("color").split(",");
        timeL.setForeground(new Color(Integer.valueOf(rgb[0]),Integer.valueOf(rgb[1]), Integer.valueOf(rgb[2])));

        jToolBar2.setEnabled(false);

        setIconImage(AppCore.getSystemImage());
        
        
    }

    private void initSystemListeners()
    {
        logoutB.addActionListener(ButtonListeners.getInstance());

        jToolBar2.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                point.x = e.getX();
                point.y = e.getY();
            }
        });

        jToolBar2.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point p = getLocation();
                setLocation(p.x + e.getX() - point.x, p.y + e.getY() - point.y);
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        logoutB = new javax.swing.JButton();
        timeL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Time");
        setBackground(java.awt.Color.white);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setUndecorated(true);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(222, 223, 211), 1, true));

        jToolBar2.setBackground(java.awt.Color.white);
        jToolBar2.setRollover(true);

        logoutB.setToolTipText("Timeout");
        logoutB.setBorderPainted(false);
        logoutB.setFocusPainted(false);
        logoutB.setFocusable(false);
        jToolBar2.add(logoutB);

        timeL.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 22)); // NOI18N
        timeL.setForeground(new java.awt.Color(176, 58, 58));
        timeL.setText("00:00:00");
        jToolBar2.add(timeL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void launch()
    {
        ComListenerThread comListener = new ComListenerThread();
        GlobalVariables.START_COM_READ = true;        
        comListener.start();

        TimerThread timer = new TimerThread();
        GlobalVariables.START_TIMER = true;
        timer.start();

        setVisible(true);
        GlobalVariables.SCREEN_LOCKED = true;

        //lockFrame.lockScreen();
    }

    public LockScreenFrame getLockFrame()
    {
        return lockFrame;
    }

    public static JLabel getTimeLabel()
    {
        return timeL;
    }

    public void updateTime(String time)
    {
        if(time.length() > 0)
        {
            timeL.setText(time);
        }
        else
        {
            String hours = (String.valueOf(GlobalVariables.HOURS).length()==1) ? "0" + String.valueOf(GlobalVariables.HOURS):String.valueOf(GlobalVariables.HOURS);
            String minutes = (String.valueOf(GlobalVariables.MINUTES).length()==1) ? "0" + String.valueOf(GlobalVariables.MINUTES):String.valueOf(GlobalVariables.MINUTES);
            String seconds = (String.valueOf(GlobalVariables.SECONDS).length()==1) ? "0" + String.valueOf(GlobalVariables.SECONDS):String.valueOf(GlobalVariables.SECONDS);
            timeL.setText(hours + ":" + minutes + ":" + seconds);
        }
    }
    public void displayCenter()
    {
        setLocation(xLoc, yLoc);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton logoutB;
    private static javax.swing.JLabel timeL;
    // End of variables declaration//GEN-END:variables

}
